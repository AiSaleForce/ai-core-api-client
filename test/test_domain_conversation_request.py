# coding: utf-8

"""
    AISF API

    This API gives you the ability to interact with AISF's neural networks

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ai_core_api_client.models.domain_conversation_request import DomainConversationRequest

class TestDomainConversationRequest(unittest.TestCase):
    """DomainConversationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DomainConversationRequest:
        """Test DomainConversationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainConversationRequest`
        """
        model = DomainConversationRequest()
        if include_optional:
            return DomainConversationRequest(
                functions = [
                    ai_core_api_client.models.domain/ai_function.domain.AIFunction(
                        description = '', 
                        name = '', 
                        parameters = ai_core_api_client.models.domain/ai_function_parameters.domain.AIFunctionParameters(
                            properties = {
                                'key' : ai_core_api_client.models.domain/ai_function_parameter_property.domain.AIFunctionParameterProperty(
                                    description = '', 
                                    type = '', )
                                }, 
                            required = [
                                ''
                                ], 
                            type = '', ), )
                    ],
                messages = [
                    ai_core_api_client.models.domain/ai_message.domain.AIMessage(
                        content = '', 
                        role = '', )
                    ],
                model = ''
            )
        else:
            return DomainConversationRequest(
                messages = [
                    ai_core_api_client.models.domain/ai_message.domain.AIMessage(
                        content = '', 
                        role = '', )
                    ],
                model = '',
        )
        """

    def testDomainConversationRequest(self):
        """Test DomainConversationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
